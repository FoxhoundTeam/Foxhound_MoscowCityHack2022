"""init

Revision ID: adfd1203f9cf
Revises: 
Create Date: 2022-06-12 15:14:03.980100

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'adfd1203f9cf'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'need_modification', 'declined', 'approved', name='statuses'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_category')),
    sa.UniqueConstraint('name', name=op.f('uq_category_name'))
    )
    op.create_index(op.f('ix_category_id'), 'category', ['id'], unique=True)
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('password_hash', sa.String(), nullable=True),
    sa.Column('role', sa.Enum('moderator', 'company', 'admin', name='roles'), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('site', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user')),
    sa.UniqueConstraint('username', name=op.f('uq_user_username'))
    )
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=True)
    op.create_table('categoryfilter',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('label', sa.String(), nullable=True),
    sa.Column('type', sa.Enum('checkbox', 'radio', 'range', name='types'), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('choices', postgresql.ARRAY(sa.String(), dimensions=1), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], name=op.f('fk_categoryfilter_category_id_category')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_categoryfilter'))
    )
    op.create_index(op.f('ix_categoryfilter_id'), 'categoryfilter', ['id'], unique=True)
    op.create_table('good',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'need_modification', 'declined', 'approved', name='statuses'), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], name=op.f('fk_good_category_id_category')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_good')),
    sa.UniqueConstraint('name', name=op.f('uq_good_name'))
    )
    op.create_index(op.f('ix_good_id'), 'good', ['id'], unique=True)
    op.create_table('goodfiltervalue',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('category_filter_id', sa.Integer(), nullable=False),
    sa.Column('good_id', sa.Integer(), nullable=False),
    sa.Column('value', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['category_filter_id'], ['categoryfilter.id'], name=op.f('fk_goodfiltervalue_category_filter_id_categoryfilter')),
    sa.ForeignKeyConstraint(['good_id'], ['good.id'], name=op.f('fk_goodfiltervalue_good_id_good')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_goodfiltervalue'))
    )
    op.create_index(op.f('ix_goodfiltervalue_id'), 'goodfiltervalue', ['id'], unique=True)
    op.create_table('usersgoods',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('good_id', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['good_id'], ['good.id'], name=op.f('fk_usersgoods_good_id_good')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_usersgoods_user_id_user')),
    sa.PrimaryKeyConstraint('id', 'user_id', 'good_id', name=op.f('pk_usersgoods'))
    )
    op.create_index(op.f('ix_usersgoods_id'), 'usersgoods', ['id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_usersgoods_id'), table_name='usersgoods')
    op.drop_table('usersgoods')
    op.drop_index(op.f('ix_goodfiltervalue_id'), table_name='goodfiltervalue')
    op.drop_table('goodfiltervalue')
    op.drop_index(op.f('ix_good_id'), table_name='good')
    op.drop_table('good')
    op.drop_index(op.f('ix_categoryfilter_id'), table_name='categoryfilter')
    op.drop_table('categoryfilter')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_category_id'), table_name='category')
    op.drop_table('category')
    # ### end Alembic commands ###
